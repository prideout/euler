To build and run the web app:

    yarn install
    yarn build
    yarn run http-server -p 8080 docs

To publish:

    yarn build:release
    git update-index --no-skip-worktree docs/main.js*
    git commit -a -m 'Publish' && git push
    git update-index --skip-worktree docs/main.js*

Todo:

    Fork example_segmented.html into example_segmented_sticky_fullsize.html
        First, replace img with svg
        Then add some JavaScript for the "fullscreen"

    Add an index (examples.html)

    Add animation to all examples using the Scrollytelling class described below.

    example_sticky_chart_d3.html
        https://observablehq.com/@d3/programmatic-zoom

    terms (defn list)

        container
            The outermost DOM element of concern for a single scrollytelling story. Style must include
            `overflow-y: scroll` and `position: relative`.
        guideline
            Virtual line stretched horizontally over the middle of the container and does not scroll with its
            content. As panels cross the guideline they trigger scrolltelling events.
        panel
            One of several block-level DOM elements that form a storytelling sequence. Panels trigger scrollytelling
            events as they cross the guideline.
        chart
            Floating area designated for data visualization, either sticky or always centered. Typically this is an
            `<svg>` or `<canvas>`. Has a low `z-order` to allow explanatory text to flow past.
        fullsize chart
            Large chart encompassing the entire background; dimensions are the same as the browser window at load-time.
        panel segments
            Vertical divisions that divide long panels into multiple pieces but do not trigger scrollytelling events.
        active panel
            The panel (if any) that currently overlaps the guideline.
        progress value
            Percentage in [0,1] that represents the vertical position of the active panel relative to the guideline.
            When the top of the panel aligns with the guideline, the progress value is 0. When the bottom of the panel
            aligns with the guideline, the progress value is 1.
        developer HUD
            Heads-up-display for development purposes. This an overlay over the container that displays the guideline,
            active panel index, and progress value.

    new Scrollytelling({
        containerSelector: ".container",
        chartSelector: ".chart",
        panelSelector: ".panels p",
        enterHandler: () => {},
        exitHandler: () => {},
        progressHandler: () => {},
        developerHud: true,
        fullsizeChart: true
    })

    Refactor Part 1 to use timeline notation and should be pushed up (earlier)

    Part 4
        Spherical polygons: write out all the verbiage
    
    Part 5
        Draw a soccer ball with cylinders, use morphing to inflate?
        Inflation and Conclusion

    Load tiny skybox

    Move commented-out intro stuff to conclusion, fix links to 3blue1brown, etc.

    Data-oriented timeline, generalize to google/scrollytelling/euler
        mobile-friendly template for scrollytelling

    Backup images for safari

    Polish
        Rename urls to assets
        Add a copyright to each file
        Add comment block to each class

    Maybe handle resizes?

Tweet:

    Informal proof of Euler's Polyhedron Formula, made with Filament and TypeScript.
    Inspired by "Euler's Gem" by @divbyzero and the videos of @3blue1brown.
    #scrollytelling

See also:
    https://www.math.csi.cuny.edu/abhijit/623/spherical-triangle.pdf
