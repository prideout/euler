To build and run the web app:

    yarn install
    yarn build
    yarn run http-server -p 8080 docs

To publish:

    yarn build:release
    git update-index --no-skip-worktree docs/main.js*
    git commit -a -m 'Publish' && git push
    git update-index --skip-worktree docs/main.js*

Todo:

    Create example_segmented_panels.html
        ul {
            display: flex;
            flex-direction: column;
            justify-content: space-between;
        }

    Add animation to all examples using the Scrollytelling class described below.

    example_sticky_chart_d3.html
        https://observablehq.com/@d3/programmatic-zoom

    terms

        container
            height:100%;
            overflow-y: scroll;
            position: relative;
        guideline
            A virtual line that is stretched horizontally over the middle of the container and does not scroll with its
            content. As panels cross the guideline they trigger scrolltelling events.
        panels
            DOM elements that are part of a vertical sequence that trigger scrolltelling events as they cross the guideline.
        chart
            Floating content for data visualization, either sticky or always centered. Typically a <svg> or <canvas>
        panel segments
            Vertical regions that visually divide a long panel into multiple pieces.
        active panel
            The panel (if any) that currently overlaps the guideline.
        progress value
            Percentage in [0,1] that represents the vertical position of active panel relative to the guideline. When
            the top of the panel aligns with the guideline, the progress value is 0. When the bottom of the panel aligns
            with the guideline, the progress value is 1.

    new Scrollytelling({
        containerSelector: ".container",
        chartSelector: ".chart",
        panelsSelector: ".panels p",
        enterHandler: () => {},
        exitHandler: () => {},
        progressHandler: () => {},
        enableHud: true
    })

    Refactor Part 1 to use timeline notation and should be pushed up (earlier)

    Part 4
        Spherical polygons: write out all the verbiage
    
    Part 5
        Draw a soccer ball with cylinders, use morphing to inflate?
        Inflation and Conclusion

    Load tiny skybox

    Move commented-out intro stuff to conclusion, fix links to 3blue1brown, etc.

    Data-oriented timeline, generalize to google/scrollytelling/euler
        mobile-friendly template for scrollytelling

    Backup images for safari

    Polish
        Rename urls to assets
        Add a copyright to each file
        Add comment block to each class

    Maybe handle resizes?

Tweet:

    Informal proof of Euler's Polyhedron Formula, made with Filament and TypeScript.
    Inspired by "Euler's Gem" by @divbyzero and the videos of @3blue1brown.
    #scrollytelling

See also:
    https://www.math.csi.cuny.edu/abhijit/623/spherical-triangle.pdf
